' Travelling Salesman Problem (TSP) using Dynamic Programming

start
    cities = [
        [0, 1280, 154, 445],     ' Distance matrix in km
        [1280, 0, 1430, 1720],
        [154, 1430, 0, 430],
        [445, 1720, 430, 0]
    ]

    city_names = ["Jakarta", "Bukittinggi", "Bandung", "Semarang"]
    n_cities = size(cities)
    completed = array(n_cities)
    cost = 0

    write("Best path: ")
    tsp(0)

    writeln("\nMinimum cost: " & cost)
stop

function tsp(city)
    completed[city] = 1
    least_city = least(city)

    write(city_names[city] & " -> ")

    if least_city == inf
        least_city = 0
        write(city_names[least_city])
        cost += cities[city][least_city]

        return
    endif

    tsp(least_city)
stop

function least(c)
    lc = inf
    min = inf
    kmin = 0

    for i, 0, n_cities - 1
        if (cities[c][i] != 0) && (completed[i] == 0)
            if cities[c][i] + cities[i][c] < min
                min = cities[i][0] + cities[c][i]
                kmin = cities[c][i]
                lc = i
            endif
        endif
    endfor

    if min != inf
        cost += kmin
    endif

    return lc
stop